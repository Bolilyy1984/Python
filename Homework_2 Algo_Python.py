
# Задача №1
# Написать программу, которая будет складывать, вычитать, умножать или делить два числа. Числа и знак операции вводятся
# пользователем. После выполнения вычисления программа не должна завершаться, а должна запрашивать новые данные для
# вычислений. Завершение программы должно выполняться при вводе символа '0' в качестве знака операции. Если пользователь
# вводит неверный знак (не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и снова запрашивать
# знак операции. Также сообщать пользователю о невозможности деления на ноль, если он ввел 0 в качестве делителя.

print('Вас приветствует программа "Калькулятор"! Если Вы хотите выйти из программы, '
      'введите 0 в качестве знака операции.')
while True:
    sign = input('Выберите знак операции (0, +, -, *, /):')
    if sign == '0':
        break
    if sign in ('+', '-', '*', '/'):
        x = float(input('Введите число №1:'))
        y = float(input('Введите число №2:'))
        if sign == '+':
            print(x + y)
        if sign == '-':
            print(x - y)
        if sign == '*':
            print(x * y)
        if sign == '/':
            if y == 0:
                print('число №2 = 0, деление на 0 невозможно!')
            else:
                print(x / y)
    else:
        print('Вы ввели неверный знак, попробуйте еще раз!')

# Задача №2
# Посчитать четные и нечетные цифры введенного натурального числа.
# Например, если введено число 34560, то у него 3 четные цифры (4, 6 и 0) и 2 нечетные (3 и 5).

natur_num = int(input('Введите натуральное число:'))
even_fi = 0
odd_fi = 0
while natur_num > 0:
    if natur_num // 2 == 0:
        even_fi += 1
    else:
        odd_fi +=1
    natur_num = natur_num // 10
print(f'четных цифр - {even_fi}, нечетных цифр - {odd_fi}')

# Задача №3
# Сформировать из введенного числа обратное по порядку входящих в него цифр и вывести на экран.
# Например, если введено число 3486, то надо вывести число 6843.

# var #1
n = int(input('Введите число: '))
m = 0
while n > 0:
    m = m * 10 + n % 10
    n = n//10
print(m)

# var #2
num = input('Введите число: ')
reverse_num = int(num[::-1])
print(reverse_num)

# Задача №7
# Напишите программу, доказывающую или проверяющую, что для множества натуральных чисел выполняется равенство:
# 1+2+...+n = n(n+1)/2, где n - любое натуральное число.

n = int(input('Введите любое натуральное число: '))
s = 0
for i in range(1, n+1):
    s += i
m = n * (n + 1) // 2
print(s, m)

# Задача №9
# Среди натуральных чисел, которые были введены, найти наибольшее по сумме цифр.
# Вывести на экран это число и сумму его цифр.
n = int(input())
max_s = 0
max_m = 0
while n != 0:
    m = n
    s = 0
    while n > 0:
        s += n % 10
        n //= 10
    if s > max_s:
        max_s = s
        max_m = m
n = int(input())
print(f'Число{max_m} имеет максимальную сумму цифр:{max_s}')

# Задача 8
# Посчитать, сколько раз встречается определенная цифра в введенной последовательности чисел.
# Количество вводимых чисел и цифра, которую необходимо посчитать, задаются вводом с клавиатуры.

n = int(input("Сколько чисел? "))
d = int(input("Какую цифру считать? "))
count = 0
for i in range(1, n + 1):
    m = int(input("Число " + str(i) + ": "))
    while m > 0:
        if m % 10 == d:
            count += 1
        m = m // 10

print(f'Было введено {count} цифр(ы) {d}')

# Задача №6
# В программе генерируется случайное целое число от 0 до 100. Пользователь должен его отгадать не более чем
# за 10 попыток. После каждой неудачной попытки должно сообщаться больше или меньше введенное пользователем число,
# чем то, что загадано. Если за 10 попыток число не отгадано, то вывести загаданное число.

from random import random
n = round(random() * 100)
i = 1
print("Отгадайте число, которое загадал компьютер. У вас 10 попыток")
while i <= 10:
    u = int(input(str(i) + '-я попытка: '))
    if u > n:
        print('Много')
    elif u < n:
        print('Мало')
    else:
        print('Вы угадали с %d-й попытки' % i)
        break
    i += 1
else:
    print('Вы исчерпали 10 попыток. Было загадано', n)


# Задача №5
# Вывести на экран коды и символы таблицы ASCII, начиная с символа под номером 32 и заканчивая 127-м включительно.
# Вывод выполнить в табличной форме: по десять пар "код-символ" в каждой строке.

for i in range(32, 128):
    print("%4d-%s" % (i, chr(i)), end='')
    if i % 10 == 0:
        print()

print()

# Задача №4
# Найти сумму n элементов следующего ряда чисел: 1 -0.5 0.25 -0.125 ...Количество элементов (n) вводится с клавиатуры.
